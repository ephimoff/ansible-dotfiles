- name: set Finder settings
  osx_defaults:
    domain: "{{ item.domain }}" # 
    key: "{{ item.key }}" 
    type: "{{ item.type }}" 
    value: "{{ item.value }}"
    state: present
  with_ietms:
    - { domain: 'com.apple.finder', key: '_FXSortFoldersFirst', type: 'bool', value: 'true' }
    - { domain: 'com.apple.finder', key: '_FXShowPosixPathInTitle', type: 'bool', value: 'true' }
    - { domain: 'com.apple.finder', key: 'ShowStatusBar', type: 'bool', value: 'true' }
    - { domain: 'com.apple.finder', key: 'ShowPathbar', type: 'bool', value: 'true' }
    - { domain: 'com.apple.finder', key: 'FXDefaultSearchScope', type: 'string', value: 'SCcf' }
    - { domain: 'com.apple.finder', key: 'FXPreferredViewStyle', type: 'string', value: 'clmv' }
    - { domain: 'NSGlobalDomain', key: 'AppleShowAllExtensions', type: 'bool', value: 'true' }

# - name: 'Finder: keep folders on top when sorting by name'
#   # shell: defaults write com.apple.finder _FXSortFoldersFirst -bool true
#   osx_defaults:
#     domain: com.apple.finder
#     key: _FXSortFoldersFirst
#     type: bool
#     value: true
#     state: present

# - name: 'Finder: show full path in title'
#   # shell: defaults write com.apple.finder _FXShowPosixPathInTitle -bool true
#   domain: com.apple.finder
#     key: _FXShowPosixPathInTitle
#     type: bool
#     value: true
#     state: present

# - name: 'Finder: show status bar'
#   # shell: defaults write com.apple.finder ShowStatusBar -bool true
#   domain: com.apple.finder
#     key: ShowStatusBar
#     type: bool
#     value: true
#     state: present

# - name: 'Finder: show path bar'
#   # shell: defaults write com.apple.finder ShowPathbar -bool true
#   domain: com.apple.finder
#     key: ShowPathbar
#     type: bool
#     value: true
#     state: present

# - name: 'Finder: when performing a search, search the current folder by default'
#   # shell: defaults write com.apple.finder FXDefaultSearchScope -string "SCcf"
#   domain: com.apple.finder
#     key: FXDefaultSearchScope
#     type: string
#     value: SCcf
#     state: present

# - name: 'Finder: use column view in all Finder windows by default'
#   # shell: defaults write com.apple.finder FXPreferredViewStyle -string "clmv"
#   domain: com.apple.finder
#     key: FXPreferredViewStyle
#     type: string
#     value: clmv
#     state: present

# - name: 'Finder: show all filename extensions'
#   shell: defaults write NSGlobalDomain AppleShowAllExtensions -bool true
#   domain: NSGlobalDomain
#     key: AppleShowAllExtensions
#     type: bool
#     value: true
#     state: present

- name: 'Avoid creating .DS_Store files on network volumes'
  shell: defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true

- name: 'Avoid creating .DS_Store files on USB Volumes'
  shell: defaults write com.apple.desktopservices DSDontWriteUSBStores -bool true

- name: 'Expand save panel by default'
  shell: defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode -bool true

- name: 'Sets default save target to be a local disk, not iCloud'
  shell: defaults write NSGlobalDomain NSDocumentSaveNewDocumentsToCloud -bool false

- name: 'Disable the `Are you sure you want to open this application?` dialog'
  shell: defaults write com.apple.LaunchServices LSQuarantine -bool false

- name: 'Show battery percent'
  shell: defaults write com.apple.menuextra.battery ShowPercent -bool true

- name: 'Trackpad: enable tap to click'
  shell: defaults -currentHost write NSGlobalDomain "com.apple.mouse.tapBehavior" -int 1

- name: 'Trackpad: disable look up'
  shell: defaults -currentHost write NSGlobalDomain "com.apple.trackpad.threeFingerTapGesture" -int 0

- name: 'Trackpad: enable 3 finger drag'
  shell: defaults -currentHost write NSGlobalDomain "com.apple.trackpad.threeFingerDragGesture" -int 1

- name: 'Trackpad: disable swipe between pages'
  shell: defaults write NSGlobalDomain AppleEnableSwipeNavigateWithScrolls -bool false

- name: 'Keyboard: enable full keyboard access for all controls, (e.g. enable Tab in modal dialogs)'
  shell: defaults write NSGlobalDomain AppleKeyboardUIMode -int 2

- name: 'Keyboard: Disable auto-correct'
  shell: defaults write NSGlobalDomain NSAutomaticSpellingCorrectionEnabled -bool false

- name: 'Mail.app: copy email addresses as \`foo@example.com\` instead of \`Foo Bar <foo@example.com>\`'
  shell: defaults write com.apple.mail AddressesIncludeNameOnPasteboard -bool false

- name: 'Safari: prevent Safari from opening ‘safe’ files automatically after downloading'
  shell: defaults write com.apple.Safari AutoOpenSafeDownloads -bool false

- name: 'Safari: Disable Safari’s thumbnail cache for History and Top Sites'
  shell: defaults write com.apple.Safari DebugSnapshotsUpdatePolicy -int 2

- name: 'Safari: Enable Safari’s debug menu'
  # shell: defaults write com.apple.Safari IncludeInternalDebugMenu -bool true
  osx_defaults:
    domain: com.apple.Safari
    key: IncludeInternalDebugMenu
    type: bool
    value: true
    state: present

- name: 'Safari: Stop Safari sending searches to Apple'
  shell: defaults write com.apple.Safari UniversalSearchEnabled -bool false

- name: 'Screen: Require password immediately after sleep or screen saver begins'
  shell: defaults write com.apple.screensaver askForPassword -int 1 && defaults write com.apple.screensaver askForPasswordDelay -int 0

- name: 'Screen: Save screenshots to the Pictures directory'
  shell: defaults write com.apple.screencapture location -string "{{general.local_home}}/Pictures"

- name: 'Screen: Save screenshots in PNG format'
  shell: defaults write com.apple.screencapture type -string "png"

- name: 'Screen: Disable shadow in screenshots'
  shell: defaults write com.apple.screencapture disable-shadow -bool true

- name: 'Terminal: Make Snazzy theme the default one'
  shell: defaults write com.apple.Terminal 'Default Window Settings' -string Snazzy && defaults write com.apple.Terminal 'Startup Window Settings' -string Snazzy

- name: 'Terminal: Disable the annoying line marks'
  shell: defaults write com.apple.Terminal ShowLineMarks -int 0

- name: 'Calendar: Start week on Monday'
  shell: defaults write com.apple.ical "first day of the week" 1

- name: 'Prevent Photos from opening automatically when devices are plugged in'
  shell: defaults -currentHost write com.apple.ImageCapture disableHotPlug -bool true

- name: 'Enable the firewall'
  shell: /usr/libexec/ApplicationFirewall/socketfilterfw --setglobalstate on
  become: yes

- name: 'Enable stealth mode'
  shell: /usr/libexec/ApplicationFirewall/socketfilterfw --setstealthmode on
  become: yes

- name: 'Top right screen corner → Put display to sleep'
  shell: defaults write com.apple.dock wvous-tr-corner -int 5 && defaults write com.apple.dock wvous-tr-modifier -int 0

# Hot corners:
# Possible values:
#  0: no-op
#  2: Mission Control
#  3: Show application windows
#  4: Desktop
#  5: Start screen saver
#  6: Disable screen saver
#  7: Dashboard
# 10: Put display to sleep
# 11: Launchpad
# 12: Notification Center

- name: 'TexEdit: Use plain text mode for new TextEdit documents'
  shell: defaults write com.apple.TextEdit RichText -int 0

- name: 'TexEdit: Open and save files as UTF-8 in TextEdit'
  shell: defaults write com.apple.TextEdit PlainTextEncoding -int 4 && defaults write com.apple.TextEdit PlainTextEncodingForWrite -int 4

- name: 'Messages: Disable continuous spell checking'
  shell: defaults write com.apple.messageshelper.MessageController SOInputLineSettings -dict-add "continuousSpellCheckingEnabled" -bool false

