- name: 'finder | Keep folders on top when sorting by name'
  osx_defaults:
    domain: com.apple.finder
    key: _FXSortFoldersFirst
    type: bool
    value: "{{ finder.enable_folders_on_top }}"
    state: present

- name: 'finder | Show full path in title'
  osx_defaults:
    domain: com.apple.finder
    key: _FXShowPosixPathInTitle
    type: bool
    value: "{{ finder.enable_full_path }}"
    state: present

- name: 'finder | Show status bar'
  osx_defaults:
    domain: com.apple.finder
    key: ShowStatusBar
    type: bool
    value: "{{ finder.show_status_bar }}"
    state: present

- name: 'finder | Show path bar'
  osx_defaults:
    domain: com.apple.finder
    key: ShowPathbar
    type: bool
    value: "{{ finder.show_path_bar }}"
    state: present

- name: 'finder | When performing a search, search the current folder by default'
  osx_defaults:
    domain: com.apple.finder
    key: FXDefaultSearchScope
    type: string
    value: "{{ finder.search_scope }}"
    state: present

- name: 'finder | Use column view in all Finder windows by default'
  osx_defaults:
    domain: com.apple.finder
    key: FXPreferredViewStyle
    type: string
    value: "{{ finder.default_view }}"
    state: present

- name: 'finder | Show all filename extensions'
  osx_defaults:
    domain: NSGlobalDomain
    key: AppleShowAllExtensions
    type: bool
    value: "{{ finder.show_extensions }}"
    state: present

- name: 'general | Avoid creating .DS_Store files on network volumes'
  osx_defaults:
    domain: com.apple.desktopservices
    key: DSDontWriteNetworkStores
    type: bool
    # value: "{{ general.avoid_creating_ds_store_on_network }}"
    value: true
    state: present

- name: print the variable
  debug: var=general

- name: 'general | Avoid creating .DS_Store files on USB Volumes'
  osx_defaults:
    domain: com.apple.desktopservices
    key: DSDontWriteUSBStores
    type: bool
    # value: "{{ general.avoid_creating_ds_store_on_usb }}"
    value: true
    state: present


- name: 'general | Expand save panel by default'
  osx_defaults:
    domain: NSGlobalDomain
    key: NSNavPanelExpandedStateForSaveMode
    type: bool
    value: "{{ general.enable_expanded_save_panel }}"
    state: present

- name: 'general | Sets default save target to be a local disk, not iCloud'
  osx_defaults:
    domain: NSGlobalDomain
    key: NSDocumentSaveNewDocumentsToCloud
    type: bool
    value: "{{ general.enable_saving_on_icloud }}"
    state: present

- name: 'general | Disable the `Are you sure you want to open this application?` dialog'
  osx_defaults:
    domain: com.apple.LaunchServices
    key: LSQuarantine
    type: bool
    value: "{{ general.enable_additional_confirmation }}"
    state: present

- name: 'general | Show battery percent'
  osx_defaults:
    domain: com.apple.menuextra.battery
    key: ShowPercent
    type: bool
    value: "{{ general.show_battery_percent }}"
    state: present

- name: 'general | Prevent Photos from opening automatically when devices are plugged in'
  osx_defaults:
    domain: com.apple.ImageCapture
    host: currentHost
    key: disableHotPlug
    type: bool
    value: "{{ general.disable_photos_auto_launch }}"
    state: present

- name: 'general | Top right screen corner → put display to sleep'
  osx_defaults:
    domain: write com.apple.dock
    key: "{{ item.key }}"
    type: "{{ item.type }}"
    value: "{{ item.value }}"
    state: present
  with_items:
    - {key: 'wvous-tr-corner', type: 'int', value: '5'}
    - {key: 'wvous-tr-modifier', type: 'int', value: '0'}
# Hot corners:
# Possible values:
#  0: no-op
#  2: Mission Control
#  3: Show application windows
#  4: Desktop
#  5: Start screen saver
#  6: Disable screen saver
#  7: Dashboard
# 10: Put display to sleep
# 11: Launchpad
# 12: Notification Center

- name: 'trackpad | Enable tap to click'
  osx_defaults:
    domain: NSGlobalDomain
    host: currentHost
    key: com.apple.mouse.tapBehavior
    type: int
    value: "{{ trackpad.enable_tap_to_click }}"
    state: present

- name: 'trackpad | Disable look up'
  osx_defaults:
    domain: NSGlobalDomain
    host: currentHost
    key: com.apple.trackpad.threeFingerTapGesture
    type: int
    value: "{{ trackpad.enable_lookup }}"
    state: present

- name: 'trackpad | Enable 3 finger drag'
  osx_defaults:
    domain: NSGlobalDomain
    host: currentHost
    key: com.apple.trackpad.threeFingerDragGesture
    type: int
    value: "{{ trackpad.enable_three_finger_drag }}"
    state: present

- name: 'trackpad | Disable swipe between pages'
  osx_defaults:
    domain: NSGlobalDomain
    key: AppleEnableSwipeNavigateWithScrolls
    type: bool
    value: "{{ trackpad.enable_swipe_navigation }}"
    state: present

- name: 'keyboard | Enable full keyboard access for all controls, (e.g. enable Tab in modal dialogs)'
  osx_defaults:
    domain: NSGlobalDomain
    key: AppleKeyboardUIMode
    type: int
    value: "{{ trackpad.enable_tab_in_modal }}"
    state: present

- name: 'keyboard | Disable auto-correct'
  osx_defaults:
    domain: NSGlobalDomain
    key: NSAutomaticSpellingCorrectionEnabled
    type: bool
    value: "{{ trackpad.enable_autocorrect }}"
    state: present

- name: 'mail.app | Copy email addresses as `foo@example.com` instead of `Foo Bar <foo@example.com>`'
  osx_defaults:
    domain: com.apple.mail
    key: AddressesIncludeNameOnPasteboard
    type: bool
    value: "{{ mail.enable_full_address_copy }}"
    state: present

- name: 'safari | Prevent Safari from opening ‘safe’ files automatically after downloading'
  osx_defaults:
    domain: com.apple.Safari
    key: AutoOpenSafeDownloads
    type: bool
    value: "{{ safari.enable_auto_opening_downloaded_files }}"
    state: present

- name: 'safari | Disable Safari’s thumbnail cache for History and Top Sites'
  osx_defaults:
    domain: com.apple.Safari
    key: DebugSnapshotsUpdatePolicy
    type: int
    value: "{{ safari.enable_thumbnail_cashe }}"
    state: present
    
- name: 'safari | Enable Safari’s debug menu'
  osx_defaults:
    domain: com.apple.Safari
    key: IncludeInternalDebugMenu
    type: bool
    value: "{{ safari.enable_debug_menu }}"
    state: present

- name: 'safari | Stop Safari sending searches to Apple'
  osx_defaults:
    domain: com.apple.Safari
    key: UniversalSearchEnabled
    type: bool
    value: "{{ safari.enable_reporting_searches }}"
    state: present

- name: 'screen | Require password immediately after sleep or screen saver begins'
  osx_defaults:
    domain: com.apple.screensaver
    key: "{{ item.key }}"
    type: "{{ item.type }}"
    value: "{{ item.value }}"
    state: present
  with_items:
    - {key: 'askForPassword', type: 'int', value: '1'}
    - {key: 'askForPasswordDelay', type: 'int', value: '0'}

- name: 'screen | Save screenshots to the defiend directory'
  osx_defaults:
    domain: com.apple.screencapture
    key: location
    type: string
    value: "{{ screenshots.location }}"
    state: present

- name: 'screen | Save screenshots in defined format'
  osx_defaults:
    domain: com.apple.screencapture
    key: type
    type: string
    value: "{{ screenshots.format }}"
    state: present

- name: 'screen | Disable shadow in screenshots'
  osx_defaults:
    domain: com.apple.screencapture
    key: disable-shadow
    type: bool
    value: "{{ screenshots.disable_shadow }}"
    state: present

- name: 'terminal | make theme of choice the default one'
  osx_defaults:
    domain: com.apple.Terminal
    key: "{{ item.key }}"
    type: "{{ item.type }}"
    value: "{{ item.value }}"
    state: present
  with_items:
    - {key: 'Default Window Settings', type: 'string', value: "{{ terminal.theme }}"}
    - {key: 'Startup Window Settings', type: 'string', value: "{{ terminal.theme }}"}

- name: 'terminal | Disable the annoying line marks'
  osx_defaults:
    domain: com.apple.Terminal
    key: ShowLineMarks
    type: int
    value: "{{ terminal.enable_line_marks }}"
    state: present

- name: 'calendar | Start week on the day of choice'
  osx_defaults:
    domain: com.apple.ical
    key: "first day of the week"
    # type: int
    value: "{{ calendar.first_day_of_the_week }}"
    state: present

- name: 'security | Enable firewall'
  shell: /usr/libexec/ApplicationFirewall/socketfilterfw --setglobalstate on
  become: yes

- name: 'security | Enable stealth mode'
  shell: /usr/libexec/ApplicationFirewall/socketfilterfw --setstealthmode on
  become: yes

- name: 'textedit | Use plain text mode for new TextEdit documents'
  osx_defaults:
    domain: com.apple.TextEdit
    key: RichText
    type: int
    value: "{{ textedit.enable_rich_text }}"
    state: present

- name: 'textedit | Open and save files as UTF-8 in TextEdit'
  osx_defaults:
    domain: com.apple.TextEdit
    key: "{{ item.key }}"
    type: "{{ item.type }}"
    value: "{{ item.value }}"
    state: present
  with_items:
    - {key: 'PlainTextEncoding', type: 'int', value: "{{ textedit.encoding_format }}"}
    - {key: 'PlainTextEncodingForWrite', type: 'int', value: "{{ textedit.encoding_format }}"}

- name: 'messages | Disable continuous spell checking'
  shell: defaults write com.apple.messageshelper.MessageController SOInputLineSettings -dict-add "continuousSpellCheckingEnabled" -bool "{{ messages.enable_spellchecking }}"
  
