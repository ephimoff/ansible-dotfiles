---
- name: Ensure Homebrew parent directory has correct permissions (on High Sierra).
  file:
    path: "{{ homebrew_prefix }}"
    owner: root
    state: directory
  become: yes
  when: "ansible_distribution_version.startswith('10.13')"
  tags: travis

- name: Ensure Homebrew parent directory has correct permissions (on non-'High Sierra' versions of Mac OS X).
  file:
    path: "{{ homebrew_prefix }}"
    owner: root
    group: admin
    state: directory
    mode: 0775
  become: yes
  when: "not ansible_distribution_version.startswith('10.13')"
  tags: travis

- name: Ensure Homebrew directory exists
  file:
    path: "{{ homebrew_install_path }}"
    owner: "{{ ansible_user_id }}"
    group: admin
    state: directory
    mode: 0775
  become: yes

# Clone Homebrew.
- name: Ensure Homebrew is installed.
  git:
    repo: "{{ homebrew_repo }}"
    version: master
    dest: "{{ homebrew_install_path }}"
    update: no
    accept_hostkey: yes
    depth: 1
  tags: travis

# Adjust Homebrew permissions.
- name: Ensure proper permissions and ownership on homebrew_brew_bin_path dirs.
  file:
    path: "{{ homebrew_brew_bin_path }}"
    state: directory
    owner: "{{ ansible_user_id }}"
    group: admin
    mode: 0775
  become: yes
  tags: travis

- name: Ensure proper ownership on homebrew_install_path subdirs.
  file:
    path: "{{ homebrew_install_path }}"
    state: directory
    owner: "{{ ansible_user_id }}"
    group: admin
  become: yes
  tags: travis

# Place brew binary in proper location and complete setup.
- name: Check if homebrew binary is already in place.
  stat: "path={{ homebrew_brew_bin_path }}/brew"
  register: homebrew_binary
  tags: travis

- name: Symlink brew to homebrew_brew_bin_path.
  file:
    src: "{{ homebrew_install_path }}/bin/brew"
    dest: "{{ homebrew_brew_bin_path }}/brew"
    state: link
  when: homebrew_binary.stat.exists == false
  become: yes
  tags: travis

- name: Ensure proper homebrew folders are in place.
  file:
    path: "{{ homebrew_prefix }}/{{ item }}"
    state: directory
    owner: "{{ ansible_user_id }}"
    group: admin
  become: yes
  with_items:
    - Cellar
    - Homebrew
    - Frameworks
    - Caskroom
    - bin
    - etc
    - include
    - lib
    - opt
    - sbin
    - share
    - share/zsh
    - share/zsh/site-functions
    - var
  tags: travis

- name: Ensure homebrew is updated 
  homebrew:
    state: latest
    update_homebrew: yes
  tags: non-travis

- name: Ensure configured taps are tapped
  homebrew_tap:
    name: "{{ item }}"
    state: present
  with_items: "{{ homebrew_taps }}"

- name: Install configured cask applications
  homebrew_cask:
    name: "{{ item }}"
    state: present
  with_items: "{{ homebrew_cask_apps }}"
  ignore_errors: "{{ skip_errors }}"
  register: repeat_cask_install

- name: Try to install failed cask applications
  homebrew_cask:
    name: "{{ item }}"
    state: present
  with_items: "{{ homebrew_cask_apps }}"
  ignore_errors: "{{ skip_errors }}"
  when: "'Failed' in repeat_cask_install.stderr"

- name: Ensure configured homebrew packages are installed
  homebrew:
    name: "{{ item }}"
    state: present
  with_items: "{{ homebrew_installed_packages }}"
  ignore_errors: "{{ skip_errors }}"
  register: package_installed

- name: Upgrade all homebrew packages (if configured)
  homebrew:
    update_homebrew: yes 
    upgrade_all: yes
  when: homebrew_upgrade_all_packages

- name: Cleanup brew packages
  command: brew cleanup
  when: package_installed.changed or repeat_cask_install.changed
