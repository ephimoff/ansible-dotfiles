---
# install and update homebrew and cask

# - name: install homebrew
#   shell: 'yes | /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"' 
#   args:
#     creates: /usr/local/bin/brew

# - name: ensure homebrew is updated 
#   homebrew:
#     state: latest
#     update_homebrew: yes

# - name: tap homebrew casks/versions
#   homebrew_tap:
#     tap: "{{ item }}"
#   with_items: "{{ casks }}"

# - name: install brew apps
#   homebrew:
#     name: "{{ item }}"
#     state: latest
#   with_items: "{{ brew_apps }}"

# - name: install cask apps
#   homebrew_cask:
#     name: "{{ item }}"
#     state: installed
#   with_items: "{{ cask_apps }}"

# - name: cleanup brew packages
#   command: brew cleanup




# Homebrew setup prerequisites.

# - name: brew | Ensure Homebrew parent directory has correct permissions (on High Sierra).
#   file:
#     path: "{{ homebrew_prefix }}"
#     owner: root
#     state: directory
#   become: yes
#   when: "ansible_distribution_version.startswith('10.13')"

# - name: brew | Ensure Homebrew parent directory has correct permissions (on non-'High Sierra' versions of macOS).
#   file:
#     path: "{{ homebrew_prefix }}"
#     owner: root
#     group: admin
#     state: directory
#     mode: 0775
#   become: yes
#   when: "not ansible_distribution_version.startswith('10.13')"

- name: brew | Ensure Homebrew directory exists.
  file:
    path: "{{ homebrew_install_path }}"
    state: directory
    mode: 0775
  become: yes

# - name: brew | Ensure Homebrew is installed.
#   git:
#     repo: "{{ homebrew_repo }}"
#     version: master
#     dest: "{{ homebrew_install_path }}"
#     update: no
#     accept_hostkey: yes
#     depth: 1

# - name: brew | Ensure proper permissions and ownership on homebrew_brew_bin_path dirs.
#   file:
#     path: "{{ homebrew_brew_bin_path }}"
#     state: directory
#     owner: "{{ ansible_user_id }}"
#     group: admin
#     mode: 0775
#   become: yes

# - name: brew | Ensure proper ownership on homebrew_install_path subdirs.
#   file:
#     path: "{{ homebrew_install_path }}"
#     state: directory
#     owner: "{{ ansible_user_id }}"
#     group: admin
#     recurse: true
#   become: yes

# Place brew binary in proper location and complete setup.
# - name: Check if homebrew binary is already in place.
#   stat: "path={{ homebrew_brew_bin_path }}/brew"
#   register: homebrew_binary

# - name: Symlink brew to homebrew_brew_bin_path.
#   file:
#     src: "{{ homebrew_install_path }}/bin/brew"
#     dest: "{{ homebrew_brew_bin_path }}/brew"
#     state: link
#   when: homebrew_binary.stat.exists == false
#   become: yes

# - name: Ensure proper homebrew folders are in place
#   file:
#     path: "{{ homebrew_prefix }}/{{ item }}"
#     state: directory
#     owner: "{{ ansible_user_id }}"
#     group: admin
#     recurse: true
#   become: yes
#   with_items:
#     - Cellar
#     - Homebrew
#     - Frameworks
#     - Caskroom
#     - bin
#     - etc
#     - include
#     - lib
#     - opt
#     - sbin
#     - share
#     - share/zsh
#     - share/zsh/site-functions
#     - var

- name: brew | Force update brew after installation.
  command: "{{ homebrew_brew_bin_path }}/brew update --force"

- name: brew | Ensure configured taps are tapped.
  homebrew_cask:
    name: "{{ item }}"
    state: installed
  with_items: "{{ homebrew_taps }}"

- name: brew | Install configured cask applications.
  homebrew_cask:
    name: "{{ item }}"
    state: installed
  with_items: "{{ homebrew_cask_apps }}"

- name: brew | Ensure configured homebrew packages are installed.
  homebrew:
    name: "{{ item }}"
    state: present
  with_items: "{{ homebrew_installed_packages }}"

- name: brew | Upgrade all homebrew packages (if configured).
  homebrew:
    update_homebrew: yes 
    upgrade_all: yes
  when: homebrew_upgrade_all_packages

- name: brew | Cleanup brew packages
  command: brew cleanup
